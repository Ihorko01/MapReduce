@model List<ManageNode.ViewModel.FileViewModel>

@{
    Layout = null;
    ViewData["Titel"] = "Show";
}
<head>
    <style type="text/css">

        html, body {
            background-color: #222;
            font-family: 'Helvetica Neue', Helvetica, sans-serif;
            color: rgba(255,255,255,0.75);
        }

        h1 {
            font-size: 3em;
            font-weight: 300;
            line-height: 1em;
            text-align: center;
            color: #4DC3FA;
        }

        h2 {
            font-size: 1em;
            font-weight: 300;
            text-align: center;
            display: block;
            line-height: 1em;
            padding-bottom: 2em;
            color: #FB667A;
        }

            h2 a {
                font-weight: 700;
                text-transform: uppercase;
                color: #FB667A;
                text-decoration: none;
            }

        .blue {
            color: #185875;
        }

        .yellow {
            color: #FFF842;
        }

        .container th h1 {
            font-weight: bold;
            font-size: 1em;
            text-align: left;
            color: #185875;
        }

        .container td {
            font-weight: normal;
            font-size: 1em;
            -webkit-box-shadow: 0 2px 2px -2px #0E1119;
            -moz-box-shadow: 0 2px 2px -2px #0E1119;
            box-shadow: 0 2px 2px -2px #0E1119;
        }

        .container {
            text-align: left;
            overflow: hidden;
            width: 80%;
            margin: 0 auto;
            display: table;
            padding: 0 0 8em 0;
        }

            .container td, .container th {
                padding-bottom: 2%;
                padding-top: 2%;
                padding-left: 2%;
            }

            /* Background-color of the odd rows */
            .container tr:nth-child(odd) {
                background-color: #323C50;
            }

            /* Background-color of the even rows */
            .container tr:nth-child(even) {
                background-color: #2C3446;
            }

            .container th {
                background-color: #1F2739;
            }

            .container td:first-child {
                color: #FB667A;
            }

            .container tr:hover {
                background-color: #464A52;
                -webkit-box-shadow: 0 6px 6px -6px #0E1119;
                -moz-box-shadow: 0 6px 6px -6px #0E1119;
                box-shadow: 0 6px 6px -6px #0E1119;
            }

            .container td:hover {
                background-color: #FFF842;
                color: #403E10;
                font-weight: bold;
                box-shadow: #7F7C21 -1px 1px, #7F7C21 -2px 2px, #7F7C21 -3px 3px, #7F7C21 -4px 4px, #7F7C21 -5px 5px, #7F7C21 -6px 6px;
                transform: translate3d(6px, -6px, 0);
                transition-delay: 0s;
                transition-duration: 0.4s;
                transition-property: all;
                transition-timing-function: line;
            }

        /*.import url(https://fonts.googleapis.com/css?family=Oswald);


        body {
            margin: 0;
            padding: 0;
        }

        svg.horizontal-bar {
            font-family: "Menlo", monospace;
            background: #272727;
            display: block;
            .portion

        {
            font-family: 'Oswald', sans-serif;
        }

        }

        html, body {
            background-color: #222;
            font-family: 'Helvetica Neue', Helvetica, sans-serif;
            color: rgba(255,255,255,0.75);
        }

        h1 {
            margin: 60px auto 0;
            width: 550px;
            text-align: center;
            font-size: 36px;
        }

        .base {
            position: absolute;
            bottom: 0;
            left: -35px;
            width: 825px;
            height: 20px;
            background-color: rgba(255,255,255,0.05);
            -moz-transform: skew(45deg);
            -o-transform: skew(45deg);
            -webkit-transform: skew(45deg);
        }

        .chart-container {
            position: relative;
            z-index: 0;
            margin: 100px auto 0;
            width: 800px;
            height: 500px;*/
        /*border: solid 1px #bbb;*/
        /*background-color: rgba(255,255,255,0.055);*/
        /*  -webkit-box-shadow: 0 8px 6px -6px #444;
        */
        /*}

            .chart-container:after {
                content: "";
                position: absolute;
                top: -15px;
                left: -8px;
                height: 15px;
                width: 800px;
                background-color: rgba(255,255,255,0.055);
                -moz-transform: skew(45deg);
                -o-transform: skew(45deg);
                -webkit-transform: skew(45deg);
                transform: skew(45deg);
            }

            .chart-container > table {
                position: absolute;
                top: 0;
                left: 0;
                z-index: -999;
                width: 100%;
                height: 100%;
            }

            .chart-container table tr td {
                width: 100px;
                height: 98x;
                border: solid 1px rgba(255,255,255,0.05);
            }

        .meter {
            position: relative;
            top: 0px;
            left: -30px;
            height: 500px;
            width: 30px;
            background-color: rgba(20,113,163,0.5);
            border-left: solid 1px rgba(255,255,255,0.5);
        }

            .meter:before {
                content: "";
                position: absolute;
                top: -7px;
                left: -15px;
                width: 15px;
                height: 500px;
                background-color: rgba(14,81,117,0.9);
                -moz-transform: skewY(45deg);
                -o-transform: skewY(45deg);
                -webkit-transform: skewY(45deg);
                transform: skewY(45deg);
            }

            .meter:after {
                content: "";
                position: absolute;
                top: -15px;
                left: -8px;
                width: 30px;
                height: 15px;
                background-color: rgba(13,171,217,0.45);
                -moz-transform: skewX(45deg);
                -o-transform: skewX(45deg);
                -webkit-transform: skewX(45deg);
                transform: skewX(45deg);
            }

            .meter li {
                position: relative;
                list-style-type: none;
                height: 99px;
                border-bottom: solid 1px #0DABD9;
            }

                .meter li:before {
                    content: "";
                    position: absolute;
                    top: -15px;
                    left: -30px;
                    width: 30px;
                    height: 100%;
                    border-bottom: solid 1px #0DABD9;
                    -moz-transform: skewY(45deg);
                    -o-transform: skewY(45deg);
                    -webkit-transform: skewY(45deg);
                    transform: skewY(45deg);
                }

                .meter li:last-child {
                    border-bottom: none;
                }

                    .meter li:last-child:before {
                        border: 0;
                    }

                .meter li div {
                    position: absolute;
                    left: -115px;
                    top: 0;
                    padding: 55px 0 0;
                    width: 80px;
                    color: #656565;
                    text-align: right;
                    font-weight: 300;
                    font-size: 14px;
                    line-height: 18px;
                    text-transform: uppercase;
                }*/


        /* ---------------------
          Vertical Bars
        ----------------------*/

        /*.bar {
            float: left;
            position: absolute;
            bottom: 0;
            z-index: 99;
            height: 35%;
            width: 40px;
            margin: 0 40px;
            background-color: rgba(107,255,49,0.35);
        }

            .bar:before {
                content: "";
                position: absolute;
                left: -15px;
                bottom: 7px;
                height: 100%;
                width: 15px;
                background-color: rgba(107,255,49,0.25);
                -webkit-transform: skewY(45deg);
            }

            .bar:after {
                content: "";
                position: absolute;
                top: -15px;
                left: -8px;
                width: 40px;
                height: 15px;
                background-color: rgba(107,255,49,0.45);
                -moz-transform: skewX(45deg);
                -o-transform: skewX(45deg);
                -webkit-transform: skewX(45deg);
                transform: skewX(45deg);
            }

        .two {
            left: 12.5%;
            height: 30%;
        }

        .three {
            left: 25%;
            height: 85%;
        }

        .four {
            left: 37.5%;
            height: 35%;
        }

        .five {
            left: 50%;
            height: 63%;
        }

        .six {
            left: 62.5%;
            height: 45%;
        }

        .seven {
            left: 75%;
            height: 15%;
        }

        .eight {
            left: 87.5%;
            height: 32%;
        }*/
    </style>
    <script>
                window.onload = function () {
                    var x = @Html.Raw(ViewBag.DataPointsMap);
                    var pieMap = new CanvasJS.Chart("chartContainer", {
                        theme: "dark2", // "light1", "light2", "dark1", "dark2"
	                    exportEnabled: true,
	                    title: {
		                    text: "Number of Map",
		                    fontSize: 21
	                    },
	                    data: [{
		                    type: "pie",
		                    startAngle: 160,
		                    toolTipContent: "<b>{label}</b>: {y}",
		                    indexLabel: "{label} - {y}",
		                    dataPoints: @Html.Raw(ViewBag.DataPointsMap)
	                    }]
                    });
                    var pieShuffle = new CanvasJS.Chart("chartContainer1", {
                        theme: "dark2", // "light1", "light2", "dark1", "dark2"
	                    exportEnabled: true,
	                    title: {
		                    text: "Number of Shuffle",
		                    fontSize: 21
	                    },
	                    data: [{
		                    type: "pie",
		                    startAngle: 160,
		                    toolTipContent: "<b>{label}</b>: {y}",
		                    indexLabel: "{label} - {y}",
		                    dataPoints: @Html.Raw(ViewBag.DataPointsShuffle)
	                    }]
                    });
                    var pieReduce = new CanvasJS.Chart("chartContainer2", {
                        theme: "dark2", // "light1", "light2", "dark1", "dark2"
	                    animationEnabled: true,
	                    title: {
		                    text: "Number of Reduce",
		                    fontSize: 21
	                    },
	                    data: [{
		                    type: "pie",
		                    startAngle: 160,
		                    toolTipContent: "<b>{label}</b>: {y}",
		                    indexLabel: "{label} - {y}",
		                    dataPoints: @Html.Raw(ViewBag.DataPointsReduce)
	                    }]
                    });
                    var chart = new CanvasJS.Chart("chartContainer3", {
                        animationEnabled: true,
                        theme: "dark2",
	                    title: {
                            text: "Time of operations"
	                    },
	                    axisY: {
		                    title: "Time",
		                    suffix: "s"
	                    },
	                    legend: {
		                    horizontalAlign: "right",
		                    verticalAlign: "center",
		                    reversed: true
	                    },
	                    toolTip: {
		                    shared: true,
		                    reversed: true
	                    },
	                    data: [{
		                    type: "stackedArea",
		                    name: "First",
		                    showInLegend: true,
		                    dataPoints: @Html.Raw(ViewBag.LinePoints1)
	                    },
	                    {
		                    type: "stackedArea",
		                    name: "Second",
		                    showInLegend: true,
		                    dataPoints: @Html.Raw(ViewBag.LinePoints2)
	                    }
	                    ]
                    });

                    var chartAvarage = new CanvasJS.Chart("chartContainer4", {
                        animationEnabled: true,
                        theme: "dark2",
	                    title: {
                            text: "Average operation time"
	                    },
	                    axisY: {
		                    title: "Time",
		                    suffix: "s"
	                    },
	                    legend: {
		                    horizontalAlign: "right",
		                    verticalAlign: "center",
		                    reversed: true
	                    },
	                    toolTip: {
		                    shared: true,
		                    reversed: true
	                    },
	                    data: [{
		                    type: "stackedArea",
		                    name: "First",
		                    showInLegend: true,
		                    dataPoints: @Html.Raw(ViewBag.LineAvarage1)
	                    },
	                    {
		                    type: "stackedArea",
		                    name: "Second",
		                    showInLegend: true,
		                    dataPoints: @Html.Raw(ViewBag.LineAvarage2)
	                    }
	                    ]
                    });
                    pieShuffle.render();
                    pieMap.render();
                    pieReduce.render();
                    chart.render();
                    chartAvarage.render();
                }
    </script>

</head>

<body>
    <table class="container" style="width: 100%;">
        <thead>
            <tr>
                <th><h1>Node</h1></th>
                <th><h1>Count Map</h1></th>
                <th><h1>Time Map</h1></th>
                <th><h1>Count Shuffle</h1></th>
                <th><h1>Time Shuffle</h1></th>
                <th><h1>Count Reduce</h1></th>
                <th><h1>Time Reduce</h1></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Node)</td>
                    <td>@Html.DisplayFor(modelItem => item.CountMap)</td>
                    <td>@Html.DisplayFor(modelItem => item.TimeMap)</td>
                    <td>@Html.DisplayFor(modelItem => item.CountShuffle)</td>
                    <td>@Html.DisplayFor(modelItem => item.TimeShuffle)</td>
                    <td>@Html.DisplayFor(modelItem => item.CountReduce)</td>
                    <td>@Html.DisplayFor(modelItem => item.TimeReduce)</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="container" id="chartContainer" style="height: 370px; width: 100%;"></div>
    <div class="container" id="chartContainer1" style="height: 370px; width: 100%;"></div>
    <div class="container" id="chartContainer2" style="height: 370px; width: 100%;"></div>
    <div class="container" id="chartContainer3" style="height: 370px; width: 100%;"></div>
    <div class="container" id="chartContainer4" style="height: 370px; width: 100%;"></div>

    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
</body>
